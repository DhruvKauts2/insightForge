version: '3.8'

services:
  # Zookeeper - Required for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: logflow-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - logflow-network

  # Kafka - Message Queue
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: logflow-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 168
    networks:
      - logflow-network

  # Elasticsearch - Log Storage & Search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: logflow-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=logflow-cluster
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - logflow-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kibana - Elasticsearch UI
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: logflow-kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - logflow-network

  # PostgreSQL - Metadata & Alert Rules
  postgres:
    image: postgres:16-alpine
    container_name: logflow-postgres
    environment:
      POSTGRES_USER: logflow
      POSTGRES_PASSWORD: logflow123
      POSTGRES_DB: logflow
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - logflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U logflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis - Caching
  redis:
    image: redis:7-alpine
    container_name: logflow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - logflow-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

# Named volumes for data persistence
volumes:
  es_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Network for inter-container communication
networks:
  logflow-network:
    driver: bridge
